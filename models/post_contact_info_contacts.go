// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostContactInfoContacts post contact info contacts
// swagger:model postContactInfoContacts

type PostContactInfoContacts struct {

	// failure
	Failure []strfmt.Email `json:"failure"`

	// success
	// Required: true
	Success []strfmt.Email `json:"success"`
}

/* polymorph postContactInfoContacts failure false */

/* polymorph postContactInfoContacts success false */

// Validate validates this post contact info contacts
func (m *PostContactInfoContacts) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFailure(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSuccess(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostContactInfoContacts) validateFailure(formats strfmt.Registry) error {

	if swag.IsZero(m.Failure) { // not required
		return nil
	}

	return nil
}

func (m *PostContactInfoContacts) validateSuccess(formats strfmt.Registry) error {

	if err := validate.Required("success", "body", m.Success); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PostContactInfoContacts) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostContactInfoContacts) UnmarshalBinary(b []byte) error {
	var res PostContactInfoContacts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
