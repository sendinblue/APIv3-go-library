// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems get contact campaign stats unsubscriptions admin unsubscription items
// swagger:model getContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems
type GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems struct {

	// UTC date-time of the event
	// Required: true
	EventTime *strfmt.DateTime `json:"eventTime"`

	// IP from which the user has been unsubscribed
	// Required: true
	IP *string `json:"ip"`
}

// Validate validates this get contact campaign stats unsubscriptions admin unsubscription items
func (m *GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventTime(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateIP(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems) validateEventTime(formats strfmt.Registry) error {

	if err := validate.Required("eventTime", "body", m.EventTime); err != nil {
		return err
	}

	if err := validate.FormatOf("eventTime", "body", "date-time", m.EventTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems) validateIP(formats strfmt.Registry) error {

	if err := validate.Required("ip", "body", m.IP); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems) UnmarshalBinary(b []byte) error {
	var res GetContactCampaignStatsUnsubscriptionsAdminUnsubscriptionItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
