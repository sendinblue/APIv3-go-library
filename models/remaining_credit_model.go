// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RemainingCreditModel remaining credit model
// swagger:model remainingCreditModel

type RemainingCreditModel struct {

	// child
	// Required: true
	Child *RemainingCreditModelChild `json:"child"`

	// reseller
	// Required: true
	Reseller *RemainingCreditModelReseller `json:"reseller"`
}

/* polymorph remainingCreditModel child false */

/* polymorph remainingCreditModel reseller false */

// Validate validates this remaining credit model
func (m *RemainingCreditModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChild(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateReseller(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RemainingCreditModel) validateChild(formats strfmt.Registry) error {

	if err := validate.Required("child", "body", m.Child); err != nil {
		return err
	}

	if m.Child != nil {

		if err := m.Child.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("child")
			}
			return err
		}
	}

	return nil
}

func (m *RemainingCreditModel) validateReseller(formats strfmt.Registry) error {

	if err := validate.Required("reseller", "body", m.Reseller); err != nil {
		return err
	}

	if m.Reseller != nil {

		if err := m.Reseller.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("reseller")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RemainingCreditModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RemainingCreditModel) UnmarshalBinary(b []byte) error {
	var res RemainingCreditModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
