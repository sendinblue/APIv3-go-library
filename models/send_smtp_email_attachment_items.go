// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SendSMTPEmailAttachmentItems send Smtp email attachment items
// swagger:model sendSmtpEmailAttachmentItems

type SendSMTPEmailAttachmentItems struct {

	// Base64 encoded chunk data of the attachment generated on the fly
	Content strfmt.Base64 `json:"content,omitempty"`

	// Required for content. Name of the attachment
	Name string `json:"name,omitempty"`

	// Absolute url of the attachment (no local file).
	URL string `json:"url,omitempty"`
}

/* polymorph sendSmtpEmailAttachmentItems content false */

/* polymorph sendSmtpEmailAttachmentItems name false */

/* polymorph sendSmtpEmailAttachmentItems url false */

// Validate validates this send Smtp email attachment items
func (m *SendSMTPEmailAttachmentItems) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *SendSMTPEmailAttachmentItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SendSMTPEmailAttachmentItems) UnmarshalBinary(b []byte) error {
	var res SendSMTPEmailAttachmentItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
