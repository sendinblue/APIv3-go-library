// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetExtendedClientAllOf1Address Address informations
// swagger:model getExtendedClientAllOf1Address
type GetExtendedClientAllOf1Address struct {

	// City information
	// Required: true
	City *string `json:"city"`

	// Country information
	// Required: true
	Country *string `json:"country"`

	// Street information
	// Required: true
	Street *string `json:"street"`

	// Zip Code information
	// Required: true
	ZipCode *string `json:"zipCode"`
}

// Validate validates this get extended client all of1 address
func (m *GetExtendedClientAllOf1Address) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStreet(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateZipCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetExtendedClientAllOf1Address) validateCity(formats strfmt.Registry) error {

	if err := validate.Required("city", "body", m.City); err != nil {
		return err
	}

	return nil
}

func (m *GetExtendedClientAllOf1Address) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("country", "body", m.Country); err != nil {
		return err
	}

	return nil
}

func (m *GetExtendedClientAllOf1Address) validateStreet(formats strfmt.Registry) error {

	if err := validate.Required("street", "body", m.Street); err != nil {
		return err
	}

	return nil
}

func (m *GetExtendedClientAllOf1Address) validateZipCode(formats strfmt.Registry) error {

	if err := validate.Required("zipCode", "body", m.ZipCode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetExtendedClientAllOf1Address) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetExtendedClientAllOf1Address) UnmarshalBinary(b []byte) error {
	var res GetExtendedClientAllOf1Address
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
