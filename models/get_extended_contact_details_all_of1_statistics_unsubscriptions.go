// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions Listing of the unsubscription for the contact
// swagger:model getExtendedContactDetailsAllOf1StatisticsUnsubscriptions
type GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions struct {

	// admin unsubscription
	// Required: true
	AdminUnsubscription GetExtendedContactDetailsAllOf1StatisticsUnsubscriptionsAdminUnsubscription `json:"adminUnsubscription"`

	// user unsubscription
	// Required: true
	UserUnsubscription GetExtendedContactDetailsAllOf1StatisticsUnsubscriptionsUserUnsubscription `json:"userUnsubscription"`
}

// Validate validates this get extended contact details all of1 statistics unsubscriptions
func (m *GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdminUnsubscription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUserUnsubscription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions) validateAdminUnsubscription(formats strfmt.Registry) error {

	if err := validate.Required("adminUnsubscription", "body", m.AdminUnsubscription); err != nil {
		return err
	}

	if err := m.AdminUnsubscription.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("adminUnsubscription")
		}
		return err
	}

	return nil
}

func (m *GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions) validateUserUnsubscription(formats strfmt.Registry) error {

	if err := validate.Required("userUnsubscription", "body", m.UserUnsubscription); err != nil {
		return err
	}

	if err := m.UserUnsubscription.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("userUnsubscription")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions) UnmarshalBinary(b []byte) error {
	var res GetExtendedContactDetailsAllOf1StatisticsUnsubscriptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
