// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateAttribute create attribute
// swagger:model createAttribute
type CreateAttribute struct {

	// enumeration
	Enumeration CreateAttributeEnumeration `json:"enumeration"`

	// Type of the attribute. Use only if the attribute's category is normal, category or transactional ( type 'id' only available if the category is 'transactional' attribute & type 'category' only available if the category is 'category' attribute )
	Type string `json:"type,omitempty"`

	// Value of the attribute. Use only if the attribute's category is calculated or global
	Value string `json:"value,omitempty"`
}

// Validate validates this create attribute
func (m *CreateAttribute) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createAttributeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["text","date","float","id","category"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createAttributeTypeTypePropEnum = append(createAttributeTypeTypePropEnum, v)
	}
}

const (
	// CreateAttributeTypeText captures enum value "text"
	CreateAttributeTypeText string = "text"
	// CreateAttributeTypeDate captures enum value "date"
	CreateAttributeTypeDate string = "date"
	// CreateAttributeTypeFloat captures enum value "float"
	CreateAttributeTypeFloat string = "float"
	// CreateAttributeTypeID captures enum value "id"
	CreateAttributeTypeID string = "id"
	// CreateAttributeTypeCategory captures enum value "category"
	CreateAttributeTypeCategory string = "category"
)

// prop value enum
func (m *CreateAttribute) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, createAttributeTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreateAttribute) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateAttribute) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateAttribute) UnmarshalBinary(b []byte) error {
	var res CreateAttribute
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
