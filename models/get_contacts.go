// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetContacts get contacts
// swagger:model getContacts
type GetContacts struct {

	// contacts
	// Required: true
	Contacts GetContactsContacts `json:"contacts"`

	// Number of contacts
	// Required: true
	Count *int64 `json:"count"`
}

// Validate validates this get contacts
func (m *GetContacts) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContacts(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetContacts) validateContacts(formats strfmt.Registry) error {

	if err := validate.Required("contacts", "body", m.Contacts); err != nil {
		return err
	}

	if err := m.Contacts.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("contacts")
		}
		return err
	}

	return nil
}

func (m *GetContacts) validateCount(formats strfmt.Registry) error {

	if err := validate.Required("count", "body", m.Count); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetContacts) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetContacts) UnmarshalBinary(b []byte) error {
	var res GetContacts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
