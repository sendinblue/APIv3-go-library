// Code generated by go-swagger; DO NOT EDIT.

package smtp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// GetSMTPTemplateReader is a Reader for the GetSMTPTemplate structure.
type GetSMTPTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSMTPTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSMTPTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSMTPTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSMTPTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSMTPTemplateOK creates a GetSMTPTemplateOK with default headers values
func NewGetSMTPTemplateOK() *GetSMTPTemplateOK {
	return &GetSMTPTemplateOK{}
}

/*GetSMTPTemplateOK handles this case with default header values.

Email template informations
*/
type GetSMTPTemplateOK struct {
	Payload *models.GetSMTPTemplateOverview
}

func (o *GetSMTPTemplateOK) Error() string {
	return fmt.Sprintf("[GET /smtp/templates/{templateId}][%d] getSmtpTemplateOK  %+v", 200, o.Payload)
}

func (o *GetSMTPTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSMTPTemplateOverview)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSMTPTemplateBadRequest creates a GetSMTPTemplateBadRequest with default headers values
func NewGetSMTPTemplateBadRequest() *GetSMTPTemplateBadRequest {
	return &GetSMTPTemplateBadRequest{}
}

/*GetSMTPTemplateBadRequest handles this case with default header values.

bad request
*/
type GetSMTPTemplateBadRequest struct {
	Payload *models.ErrorModel
}

func (o *GetSMTPTemplateBadRequest) Error() string {
	return fmt.Sprintf("[GET /smtp/templates/{templateId}][%d] getSmtpTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *GetSMTPTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSMTPTemplateNotFound creates a GetSMTPTemplateNotFound with default headers values
func NewGetSMTPTemplateNotFound() *GetSMTPTemplateNotFound {
	return &GetSMTPTemplateNotFound{}
}

/*GetSMTPTemplateNotFound handles this case with default header values.

Template ID not found
*/
type GetSMTPTemplateNotFound struct {
	Payload *models.ErrorModel
}

func (o *GetSMTPTemplateNotFound) Error() string {
	return fmt.Sprintf("[GET /smtp/templates/{templateId}][%d] getSmtpTemplateNotFound  %+v", 404, o.Payload)
}

func (o *GetSMTPTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
