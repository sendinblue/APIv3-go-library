// Code generated by go-swagger; DO NOT EDIT.

package smtp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// SendTransacEmailReader is a Reader for the SendTransacEmail structure.
type SendTransacEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendTransacEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewSendTransacEmailCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendTransacEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendTransacEmailCreated creates a SendTransacEmailCreated with default headers values
func NewSendTransacEmailCreated() *SendTransacEmailCreated {
	return &SendTransacEmailCreated{}
}

/*SendTransacEmailCreated handles this case with default header values.

SMTP email sent
*/
type SendTransacEmailCreated struct {
	Payload *models.CreateSMTPEmail
}

func (o *SendTransacEmailCreated) Error() string {
	return fmt.Sprintf("[POST /smtp/email][%d] sendTransacEmailCreated  %+v", 201, o.Payload)
}

func (o *SendTransacEmailCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateSMTPEmail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendTransacEmailBadRequest creates a SendTransacEmailBadRequest with default headers values
func NewSendTransacEmailBadRequest() *SendTransacEmailBadRequest {
	return &SendTransacEmailBadRequest{}
}

/*SendTransacEmailBadRequest handles this case with default header values.

bad request
*/
type SendTransacEmailBadRequest struct {
	Payload *models.ErrorModel
}

func (o *SendTransacEmailBadRequest) Error() string {
	return fmt.Sprintf("[POST /smtp/email][%d] sendTransacEmailBadRequest  %+v", 400, o.Payload)
}

func (o *SendTransacEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
