// Code generated by go-swagger; DO NOT EDIT.

package smtp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// UpdateSMTPTemplateReader is a Reader for the UpdateSMTPTemplate structure.
type UpdateSMTPTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSMTPTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUpdateSMTPTemplateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateSMTPTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateSMTPTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateSMTPTemplateNoContent creates a UpdateSMTPTemplateNoContent with default headers values
func NewUpdateSMTPTemplateNoContent() *UpdateSMTPTemplateNoContent {
	return &UpdateSMTPTemplateNoContent{}
}

/*UpdateSMTPTemplateNoContent handles this case with default header values.

SMTP template updated
*/
type UpdateSMTPTemplateNoContent struct {
}

func (o *UpdateSMTPTemplateNoContent) Error() string {
	return fmt.Sprintf("[PUT /smtp/templates/{templateId}][%d] updateSmtpTemplateNoContent ", 204)
}

func (o *UpdateSMTPTemplateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSMTPTemplateBadRequest creates a UpdateSMTPTemplateBadRequest with default headers values
func NewUpdateSMTPTemplateBadRequest() *UpdateSMTPTemplateBadRequest {
	return &UpdateSMTPTemplateBadRequest{}
}

/*UpdateSMTPTemplateBadRequest handles this case with default header values.

bad request
*/
type UpdateSMTPTemplateBadRequest struct {
	Payload *models.ErrorModel
}

func (o *UpdateSMTPTemplateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /smtp/templates/{templateId}][%d] updateSmtpTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateSMTPTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSMTPTemplateNotFound creates a UpdateSMTPTemplateNotFound with default headers values
func NewUpdateSMTPTemplateNotFound() *UpdateSMTPTemplateNotFound {
	return &UpdateSMTPTemplateNotFound{}
}

/*UpdateSMTPTemplateNotFound handles this case with default header values.

Template ID not found
*/
type UpdateSMTPTemplateNotFound struct {
	Payload *models.ErrorModel
}

func (o *UpdateSMTPTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /smtp/templates/{templateId}][%d] updateSmtpTemplateNotFound  %+v", 404, o.Payload)
}

func (o *UpdateSMTPTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
