// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// AddContactToListReader is a Reader for the AddContactToList structure.
type AddContactToListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddContactToListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddContactToListCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddContactToListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAddContactToListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddContactToListCreated creates a AddContactToListCreated with default headers values
func NewAddContactToListCreated() *AddContactToListCreated {
	return &AddContactToListCreated{}
}

/*AddContactToListCreated handles this case with default header values.

All contacts have been added successfully to the list with details of failed ones
*/
type AddContactToListCreated struct {
	Payload *models.PostContactInfo
}

func (o *AddContactToListCreated) Error() string {
	return fmt.Sprintf("[POST /contacts/lists/{listId}/contacts/add][%d] addContactToListCreated  %+v", 201, o.Payload)
}

func (o *AddContactToListCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostContactInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddContactToListBadRequest creates a AddContactToListBadRequest with default headers values
func NewAddContactToListBadRequest() *AddContactToListBadRequest {
	return &AddContactToListBadRequest{}
}

/*AddContactToListBadRequest handles this case with default header values.

bad request
*/
type AddContactToListBadRequest struct {
	Payload *models.ErrorModel
}

func (o *AddContactToListBadRequest) Error() string {
	return fmt.Sprintf("[POST /contacts/lists/{listId}/contacts/add][%d] addContactToListBadRequest  %+v", 400, o.Payload)
}

func (o *AddContactToListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddContactToListNotFound creates a AddContactToListNotFound with default headers values
func NewAddContactToListNotFound() *AddContactToListNotFound {
	return &AddContactToListNotFound{}
}

/*AddContactToListNotFound handles this case with default header values.

List ID not found
*/
type AddContactToListNotFound struct {
	Payload *models.ErrorModel
}

func (o *AddContactToListNotFound) Error() string {
	return fmt.Sprintf("[POST /contacts/lists/{listId}/contacts/add][%d] addContactToListNotFound  %+v", 404, o.Payload)
}

func (o *AddContactToListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
