// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// UpdateListReader is a Reader for the UpdateList structure.
type UpdateListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUpdateListNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateListNoContent creates a UpdateListNoContent with default headers values
func NewUpdateListNoContent() *UpdateListNoContent {
	return &UpdateListNoContent{}
}

/*UpdateListNoContent handles this case with default header values.

List updated
*/
type UpdateListNoContent struct {
}

func (o *UpdateListNoContent) Error() string {
	return fmt.Sprintf("[PUT /contacts/lists/{listId}][%d] updateListNoContent ", 204)
}

func (o *UpdateListNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateListBadRequest creates a UpdateListBadRequest with default headers values
func NewUpdateListBadRequest() *UpdateListBadRequest {
	return &UpdateListBadRequest{}
}

/*UpdateListBadRequest handles this case with default header values.

bad request
*/
type UpdateListBadRequest struct {
	Payload *models.ErrorModel
}

func (o *UpdateListBadRequest) Error() string {
	return fmt.Sprintf("[PUT /contacts/lists/{listId}][%d] updateListBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateListNotFound creates a UpdateListNotFound with default headers values
func NewUpdateListNotFound() *UpdateListNotFound {
	return &UpdateListNotFound{}
}

/*UpdateListNotFound handles this case with default header values.

List ID not found
*/
type UpdateListNotFound struct {
	Payload *models.ErrorModel
}

func (o *UpdateListNotFound) Error() string {
	return fmt.Sprintf("[PUT /contacts/lists/{listId}][%d] updateListNotFound  %+v", 404, o.Payload)
}

func (o *UpdateListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
