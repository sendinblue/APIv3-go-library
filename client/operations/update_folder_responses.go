// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// UpdateFolderReader is a Reader for the UpdateFolder structure.
type UpdateFolderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFolderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUpdateFolderNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateFolderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateFolderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateFolderNoContent creates a UpdateFolderNoContent with default headers values
func NewUpdateFolderNoContent() *UpdateFolderNoContent {
	return &UpdateFolderNoContent{}
}

/*UpdateFolderNoContent handles this case with default header values.

Folder updated
*/
type UpdateFolderNoContent struct {
}

func (o *UpdateFolderNoContent) Error() string {
	return fmt.Sprintf("[PUT /contacts/folders/{folderId}][%d] updateFolderNoContent ", 204)
}

func (o *UpdateFolderNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFolderBadRequest creates a UpdateFolderBadRequest with default headers values
func NewUpdateFolderBadRequest() *UpdateFolderBadRequest {
	return &UpdateFolderBadRequest{}
}

/*UpdateFolderBadRequest handles this case with default header values.

bad request
*/
type UpdateFolderBadRequest struct {
	Payload *models.ErrorModel
}

func (o *UpdateFolderBadRequest) Error() string {
	return fmt.Sprintf("[PUT /contacts/folders/{folderId}][%d] updateFolderBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateFolderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFolderNotFound creates a UpdateFolderNotFound with default headers values
func NewUpdateFolderNotFound() *UpdateFolderNotFound {
	return &UpdateFolderNotFound{}
}

/*UpdateFolderNotFound handles this case with default header values.

Folder ID not found
*/
type UpdateFolderNotFound struct {
	Payload *models.ErrorModel
}

func (o *UpdateFolderNotFound) Error() string {
	return fmt.Sprintf("[PUT /contacts/folders/{folderId}][%d] updateFolderNotFound  %+v", 404, o.Payload)
}

func (o *UpdateFolderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
