// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// GetContactsFromListReader is a Reader for the GetContactsFromList structure.
type GetContactsFromListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContactsFromListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetContactsFromListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetContactsFromListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetContactsFromListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetContactsFromListOK creates a GetContactsFromListOK with default headers values
func NewGetContactsFromListOK() *GetContactsFromListOK {
	return &GetContactsFromListOK{}
}

/*GetContactsFromListOK handles this case with default header values.

Contact informations
*/
type GetContactsFromListOK struct {
	Payload *models.GetContacts
}

func (o *GetContactsFromListOK) Error() string {
	return fmt.Sprintf("[GET /contacts/lists/{listId}/contacts][%d] getContactsFromListOK  %+v", 200, o.Payload)
}

func (o *GetContactsFromListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetContacts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactsFromListBadRequest creates a GetContactsFromListBadRequest with default headers values
func NewGetContactsFromListBadRequest() *GetContactsFromListBadRequest {
	return &GetContactsFromListBadRequest{}
}

/*GetContactsFromListBadRequest handles this case with default header values.

bad request
*/
type GetContactsFromListBadRequest struct {
	Payload *models.ErrorModel
}

func (o *GetContactsFromListBadRequest) Error() string {
	return fmt.Sprintf("[GET /contacts/lists/{listId}/contacts][%d] getContactsFromListBadRequest  %+v", 400, o.Payload)
}

func (o *GetContactsFromListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactsFromListNotFound creates a GetContactsFromListNotFound with default headers values
func NewGetContactsFromListNotFound() *GetContactsFromListNotFound {
	return &GetContactsFromListNotFound{}
}

/*GetContactsFromListNotFound handles this case with default header values.

List ID not found
*/
type GetContactsFromListNotFound struct {
	Payload *models.ErrorModel
}

func (o *GetContactsFromListNotFound) Error() string {
	return fmt.Sprintf("[GET /contacts/lists/{listId}/contacts][%d] getContactsFromListNotFound  %+v", 404, o.Payload)
}

func (o *GetContactsFromListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
