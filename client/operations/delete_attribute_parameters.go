// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteAttributeParams creates a new DeleteAttributeParams object
// with the default values initialized.
func NewDeleteAttributeParams() *DeleteAttributeParams {
	var ()
	return &DeleteAttributeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAttributeParamsWithTimeout creates a new DeleteAttributeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAttributeParamsWithTimeout(timeout time.Duration) *DeleteAttributeParams {
	var ()
	return &DeleteAttributeParams{

		timeout: timeout,
	}
}

// NewDeleteAttributeParamsWithContext creates a new DeleteAttributeParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAttributeParamsWithContext(ctx context.Context) *DeleteAttributeParams {
	var ()
	return &DeleteAttributeParams{

		Context: ctx,
	}
}

// NewDeleteAttributeParamsWithHTTPClient creates a new DeleteAttributeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAttributeParamsWithHTTPClient(client *http.Client) *DeleteAttributeParams {
	var ()
	return &DeleteAttributeParams{
		HTTPClient: client,
	}
}

/*DeleteAttributeParams contains all the parameters to send to the API endpoint
for the delete attribute operation typically these are written to a http.Request
*/
type DeleteAttributeParams struct {

	/*AttributeCategory
	  Category of the attribute

	*/
	AttributeCategory string
	/*AttributeName
	  Name of the existing attribute

	*/
	AttributeName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete attribute params
func (o *DeleteAttributeParams) WithTimeout(timeout time.Duration) *DeleteAttributeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete attribute params
func (o *DeleteAttributeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete attribute params
func (o *DeleteAttributeParams) WithContext(ctx context.Context) *DeleteAttributeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete attribute params
func (o *DeleteAttributeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete attribute params
func (o *DeleteAttributeParams) WithHTTPClient(client *http.Client) *DeleteAttributeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete attribute params
func (o *DeleteAttributeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttributeCategory adds the attributeCategory to the delete attribute params
func (o *DeleteAttributeParams) WithAttributeCategory(attributeCategory string) *DeleteAttributeParams {
	o.SetAttributeCategory(attributeCategory)
	return o
}

// SetAttributeCategory adds the attributeCategory to the delete attribute params
func (o *DeleteAttributeParams) SetAttributeCategory(attributeCategory string) {
	o.AttributeCategory = attributeCategory
}

// WithAttributeName adds the attributeName to the delete attribute params
func (o *DeleteAttributeParams) WithAttributeName(attributeName string) *DeleteAttributeParams {
	o.SetAttributeName(attributeName)
	return o
}

// SetAttributeName adds the attributeName to the delete attribute params
func (o *DeleteAttributeParams) SetAttributeName(attributeName string) {
	o.AttributeName = attributeName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAttributeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param attributeCategory
	if err := r.SetPathParam("attributeCategory", o.AttributeCategory); err != nil {
		return err
	}

	// path param attributeName
	if err := r.SetPathParam("attributeName", o.AttributeName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
