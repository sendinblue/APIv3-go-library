// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// GetFolderReader is a Reader for the GetFolder structure.
type GetFolderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFolderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFolderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFolderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFolderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFolderOK creates a GetFolderOK with default headers values
func NewGetFolderOK() *GetFolderOK {
	return &GetFolderOK{}
}

/*GetFolderOK handles this case with default header values.

Folder details
*/
type GetFolderOK struct {
	Payload *models.GetFolder
}

func (o *GetFolderOK) Error() string {
	return fmt.Sprintf("[GET /contacts/folders/{folderId}][%d] getFolderOK  %+v", 200, o.Payload)
}

func (o *GetFolderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetFolder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderBadRequest creates a GetFolderBadRequest with default headers values
func NewGetFolderBadRequest() *GetFolderBadRequest {
	return &GetFolderBadRequest{}
}

/*GetFolderBadRequest handles this case with default header values.

bad request
*/
type GetFolderBadRequest struct {
	Payload *models.ErrorModel
}

func (o *GetFolderBadRequest) Error() string {
	return fmt.Sprintf("[GET /contacts/folders/{folderId}][%d] getFolderBadRequest  %+v", 400, o.Payload)
}

func (o *GetFolderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderNotFound creates a GetFolderNotFound with default headers values
func NewGetFolderNotFound() *GetFolderNotFound {
	return &GetFolderNotFound{}
}

/*GetFolderNotFound handles this case with default header values.

Folder ID not found
*/
type GetFolderNotFound struct {
	Payload *models.ErrorModel
}

func (o *GetFolderNotFound) Error() string {
	return fmt.Sprintf("[GET /contacts/folders/{folderId}][%d] getFolderNotFound  %+v", 404, o.Payload)
}

func (o *GetFolderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
