// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// NewAddContactToListParams creates a new AddContactToListParams object
// with the default values initialized.
func NewAddContactToListParams() *AddContactToListParams {
	var ()
	return &AddContactToListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddContactToListParamsWithTimeout creates a new AddContactToListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddContactToListParamsWithTimeout(timeout time.Duration) *AddContactToListParams {
	var ()
	return &AddContactToListParams{

		timeout: timeout,
	}
}

// NewAddContactToListParamsWithContext creates a new AddContactToListParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddContactToListParamsWithContext(ctx context.Context) *AddContactToListParams {
	var ()
	return &AddContactToListParams{

		Context: ctx,
	}
}

// NewAddContactToListParamsWithHTTPClient creates a new AddContactToListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddContactToListParamsWithHTTPClient(client *http.Client) *AddContactToListParams {
	var ()
	return &AddContactToListParams{
		HTTPClient: client,
	}
}

/*AddContactToListParams contains all the parameters to send to the API endpoint
for the add contact to list operation typically these are written to a http.Request
*/
type AddContactToListParams struct {

	/*ContactEmails
	  Emails addresses of the contacts

	*/
	ContactEmails *models.AddRemoveContactToList
	/*ListID
	  Id of the list

	*/
	ListID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add contact to list params
func (o *AddContactToListParams) WithTimeout(timeout time.Duration) *AddContactToListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add contact to list params
func (o *AddContactToListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add contact to list params
func (o *AddContactToListParams) WithContext(ctx context.Context) *AddContactToListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add contact to list params
func (o *AddContactToListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add contact to list params
func (o *AddContactToListParams) WithHTTPClient(client *http.Client) *AddContactToListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add contact to list params
func (o *AddContactToListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContactEmails adds the contactEmails to the add contact to list params
func (o *AddContactToListParams) WithContactEmails(contactEmails *models.AddRemoveContactToList) *AddContactToListParams {
	o.SetContactEmails(contactEmails)
	return o
}

// SetContactEmails adds the contactEmails to the add contact to list params
func (o *AddContactToListParams) SetContactEmails(contactEmails *models.AddRemoveContactToList) {
	o.ContactEmails = contactEmails
}

// WithListID adds the listID to the add contact to list params
func (o *AddContactToListParams) WithListID(listID int64) *AddContactToListParams {
	o.SetListID(listID)
	return o
}

// SetListID adds the listId to the add contact to list params
func (o *AddContactToListParams) SetListID(listID int64) {
	o.ListID = listID
}

// WriteToRequest writes these params to a swagger request
func (o *AddContactToListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ContactEmails != nil {
		if err := r.SetBodyParam(o.ContactEmails); err != nil {
			return err
		}
	}

	// path param listId
	if err := r.SetPathParam("listId", swag.FormatInt64(o.ListID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
