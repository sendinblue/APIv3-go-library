// Code generated by go-swagger; DO NOT EDIT.

package sms_campaigns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// NewGetSMSCampaignParams creates a new GetSMSCampaignParams object
// with the default values initialized.
func NewGetSMSCampaignParams() *GetSMSCampaignParams {
	var ()
	return &GetSMSCampaignParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSMSCampaignParamsWithTimeout creates a new GetSMSCampaignParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSMSCampaignParamsWithTimeout(timeout time.Duration) *GetSMSCampaignParams {
	var ()
	return &GetSMSCampaignParams{

		timeout: timeout,
	}
}

// NewGetSMSCampaignParamsWithContext creates a new GetSMSCampaignParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSMSCampaignParamsWithContext(ctx context.Context) *GetSMSCampaignParams {
	var ()
	return &GetSMSCampaignParams{

		Context: ctx,
	}
}

// NewGetSMSCampaignParamsWithHTTPClient creates a new GetSMSCampaignParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSMSCampaignParamsWithHTTPClient(client *http.Client) *GetSMSCampaignParams {
	var ()
	return &GetSMSCampaignParams{
		HTTPClient: client,
	}
}

/*GetSMSCampaignParams contains all the parameters to send to the API endpoint
for the get Sms campaign operation typically these are written to a http.Request
*/
type GetSMSCampaignParams struct {

	/*CampaignID
	  id of the SMS campaign

	*/
	CampaignID int64
	/*GetSMSCampaign
	  Values to update an SMS Campaign

	*/
	GetSMSCampaign *models.GetSMSCampaign

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get Sms campaign params
func (o *GetSMSCampaignParams) WithTimeout(timeout time.Duration) *GetSMSCampaignParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get Sms campaign params
func (o *GetSMSCampaignParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get Sms campaign params
func (o *GetSMSCampaignParams) WithContext(ctx context.Context) *GetSMSCampaignParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get Sms campaign params
func (o *GetSMSCampaignParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get Sms campaign params
func (o *GetSMSCampaignParams) WithHTTPClient(client *http.Client) *GetSMSCampaignParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get Sms campaign params
func (o *GetSMSCampaignParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the get Sms campaign params
func (o *GetSMSCampaignParams) WithCampaignID(campaignID int64) *GetSMSCampaignParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the get Sms campaign params
func (o *GetSMSCampaignParams) SetCampaignID(campaignID int64) {
	o.CampaignID = campaignID
}

// WithGetSMSCampaign adds the getSMSCampaign to the get Sms campaign params
func (o *GetSMSCampaignParams) WithGetSMSCampaign(getSMSCampaign *models.GetSMSCampaign) *GetSMSCampaignParams {
	o.SetGetSMSCampaign(getSMSCampaign)
	return o
}

// SetGetSMSCampaign adds the getSmsCampaign to the get Sms campaign params
func (o *GetSMSCampaignParams) SetGetSMSCampaign(getSMSCampaign *models.GetSMSCampaign) {
	o.GetSMSCampaign = getSMSCampaign
}

// WriteToRequest writes these params to a swagger request
func (o *GetSMSCampaignParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param campaignId
	if err := r.SetPathParam("campaignId", swag.FormatInt64(o.CampaignID)); err != nil {
		return err
	}

	if o.GetSMSCampaign != nil {
		if err := r.SetBodyParam(o.GetSMSCampaign); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
