// Code generated by go-swagger; DO NOT EDIT.

package sms_campaigns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// SendTestSmsReader is a Reader for the SendTestSms structure.
type SendTestSmsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendTestSmsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewSendTestSmsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendTestSmsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSendTestSmsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendTestSmsNoContent creates a SendTestSmsNoContent with default headers values
func NewSendTestSmsNoContent() *SendTestSmsNoContent {
	return &SendTestSmsNoContent{}
}

/*SendTestSmsNoContent handles this case with default header values.

Test SMS has been sent successfully to the recipient
*/
type SendTestSmsNoContent struct {
}

func (o *SendTestSmsNoContent) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendTest][%d] sendTestSmsNoContent ", 204)
}

func (o *SendTestSmsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendTestSmsBadRequest creates a SendTestSmsBadRequest with default headers values
func NewSendTestSmsBadRequest() *SendTestSmsBadRequest {
	return &SendTestSmsBadRequest{}
}

/*SendTestSmsBadRequest handles this case with default header values.

Test SMS could not be sent to the following email addresses
*/
type SendTestSmsBadRequest struct {
	Payload *models.PostSendSmsTestFailed
}

func (o *SendTestSmsBadRequest) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendTest][%d] sendTestSmsBadRequest  %+v", 400, o.Payload)
}

func (o *SendTestSmsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostSendSmsTestFailed)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendTestSmsNotFound creates a SendTestSmsNotFound with default headers values
func NewSendTestSmsNotFound() *SendTestSmsNotFound {
	return &SendTestSmsNotFound{}
}

/*SendTestSmsNotFound handles this case with default header values.

Campaign ID not found
*/
type SendTestSmsNotFound struct {
	Payload *models.ErrorModel
}

func (o *SendTestSmsNotFound) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendTest][%d] sendTestSmsNotFound  %+v", 404, o.Payload)
}

func (o *SendTestSmsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
