// Code generated by go-swagger; DO NOT EDIT.

package sms_campaigns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// SendSMSCampaignNowReader is a Reader for the SendSMSCampaignNow structure.
type SendSMSCampaignNowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendSMSCampaignNowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewSendSMSCampaignNowNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendSMSCampaignNowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewSendSMSCampaignNowPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSendSMSCampaignNowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendSMSCampaignNowNoContent creates a SendSMSCampaignNowNoContent with default headers values
func NewSendSMSCampaignNowNoContent() *SendSMSCampaignNowNoContent {
	return &SendSMSCampaignNowNoContent{}
}

/*SendSMSCampaignNowNoContent handles this case with default header values.

SMS campaign has been scheduled
*/
type SendSMSCampaignNowNoContent struct {
}

func (o *SendSMSCampaignNowNoContent) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendNow][%d] sendSMSCampaignNowNoContent ", 204)
}

func (o *SendSMSCampaignNowNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendSMSCampaignNowBadRequest creates a SendSMSCampaignNowBadRequest with default headers values
func NewSendSMSCampaignNowBadRequest() *SendSMSCampaignNowBadRequest {
	return &SendSMSCampaignNowBadRequest{}
}

/*SendSMSCampaignNowBadRequest handles this case with default header values.

SMS Campaign could not be sent
*/
type SendSMSCampaignNowBadRequest struct {
	Payload *models.ErrorModel
}

func (o *SendSMSCampaignNowBadRequest) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendNow][%d] sendSMSCampaignNowBadRequest  %+v", 400, o.Payload)
}

func (o *SendSMSCampaignNowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendSMSCampaignNowPaymentRequired creates a SendSMSCampaignNowPaymentRequired with default headers values
func NewSendSMSCampaignNowPaymentRequired() *SendSMSCampaignNowPaymentRequired {
	return &SendSMSCampaignNowPaymentRequired{}
}

/*SendSMSCampaignNowPaymentRequired handles this case with default header values.

You don't have enough credit to send your campaign. Please update your plan
*/
type SendSMSCampaignNowPaymentRequired struct {
	Payload *models.ErrorModel
}

func (o *SendSMSCampaignNowPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendNow][%d] sendSMSCampaignNowPaymentRequired  %+v", 402, o.Payload)
}

func (o *SendSMSCampaignNowPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendSMSCampaignNowNotFound creates a SendSMSCampaignNowNotFound with default headers values
func NewSendSMSCampaignNowNotFound() *SendSMSCampaignNowNotFound {
	return &SendSMSCampaignNowNotFound{}
}

/*SendSMSCampaignNowNotFound handles this case with default header values.

Campaign ID not found
*/
type SendSMSCampaignNowNotFound struct {
	Payload *models.ErrorModel
}

func (o *SendSMSCampaignNowNotFound) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendNow][%d] sendSMSCampaignNowNotFound  %+v", 404, o.Payload)
}

func (o *SendSMSCampaignNowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
