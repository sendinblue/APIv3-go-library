// Code generated by go-swagger; DO NOT EDIT.

package senders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// DeleteSenderReader is a Reader for the DeleteSender structure.
type DeleteSenderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSenderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSenderNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteSenderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSenderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSenderNoContent creates a DeleteSenderNoContent with default headers values
func NewDeleteSenderNoContent() *DeleteSenderNoContent {
	return &DeleteSenderNoContent{}
}

/*DeleteSenderNoContent handles this case with default header values.

sender deleted
*/
type DeleteSenderNoContent struct {
}

func (o *DeleteSenderNoContent) Error() string {
	return fmt.Sprintf("[DELETE /senders/{senderId}][%d] deleteSenderNoContent ", 204)
}

func (o *DeleteSenderNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSenderBadRequest creates a DeleteSenderBadRequest with default headers values
func NewDeleteSenderBadRequest() *DeleteSenderBadRequest {
	return &DeleteSenderBadRequest{}
}

/*DeleteSenderBadRequest handles this case with default header values.

bad request
*/
type DeleteSenderBadRequest struct {
	Payload *models.ErrorModel
}

func (o *DeleteSenderBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /senders/{senderId}][%d] deleteSenderBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSenderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSenderNotFound creates a DeleteSenderNotFound with default headers values
func NewDeleteSenderNotFound() *DeleteSenderNotFound {
	return &DeleteSenderNotFound{}
}

/*DeleteSenderNotFound handles this case with default header values.

Sender ID not found
*/
type DeleteSenderNotFound struct {
	Payload *models.ErrorModel
}

func (o *DeleteSenderNotFound) Error() string {
	return fmt.Sprintf("[DELETE /senders/{senderId}][%d] deleteSenderNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSenderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
