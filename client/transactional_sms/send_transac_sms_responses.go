// Code generated by go-swagger; DO NOT EDIT.

package transactional_sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// SendTransacSMSReader is a Reader for the SendTransacSMS structure.
type SendTransacSMSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendTransacSMSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewSendTransacSMSCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendTransacSMSBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 402:
		result := NewSendTransacSMSPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendTransacSMSCreated creates a SendTransacSMSCreated with default headers values
func NewSendTransacSMSCreated() *SendTransacSMSCreated {
	return &SendTransacSMSCreated{}
}

/*SendTransacSMSCreated handles this case with default header values.

SMS has been sent successfully to the recipient
*/
type SendTransacSMSCreated struct {
	Payload *models.SendSMS
}

func (o *SendTransacSMSCreated) Error() string {
	return fmt.Sprintf("[POST /transactionalSMS/sms][%d] sendTransacSmsCreated  %+v", 201, o.Payload)
}

func (o *SendTransacSMSCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SendSMS)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendTransacSMSBadRequest creates a SendTransacSMSBadRequest with default headers values
func NewSendTransacSMSBadRequest() *SendTransacSMSBadRequest {
	return &SendTransacSMSBadRequest{}
}

/*SendTransacSMSBadRequest handles this case with default header values.

bad request
*/
type SendTransacSMSBadRequest struct {
	Payload *models.ErrorModel
}

func (o *SendTransacSMSBadRequest) Error() string {
	return fmt.Sprintf("[POST /transactionalSMS/sms][%d] sendTransacSmsBadRequest  %+v", 400, o.Payload)
}

func (o *SendTransacSMSBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendTransacSMSPaymentRequired creates a SendTransacSMSPaymentRequired with default headers values
func NewSendTransacSMSPaymentRequired() *SendTransacSMSPaymentRequired {
	return &SendTransacSMSPaymentRequired{}
}

/*SendTransacSMSPaymentRequired handles this case with default header values.

You don't have enough credit to send your SMS. Please update your plan
*/
type SendTransacSMSPaymentRequired struct {
	Payload *models.ErrorModel
}

func (o *SendTransacSMSPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /transactionalSMS/sms][%d] sendTransacSmsPaymentRequired  %+v", 402, o.Payload)
}

func (o *SendTransacSMSPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
