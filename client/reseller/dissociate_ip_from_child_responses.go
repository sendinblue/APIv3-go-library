// Code generated by go-swagger; DO NOT EDIT.

package reseller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// DissociateIPFromChildReader is a Reader for the DissociateIPFromChild structure.
type DissociateIPFromChildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DissociateIPFromChildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDissociateIPFromChildNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDissociateIPFromChildBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDissociateIPFromChildNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDissociateIPFromChildNoContent creates a DissociateIPFromChildNoContent with default headers values
func NewDissociateIPFromChildNoContent() *DissociateIPFromChildNoContent {
	return &DissociateIPFromChildNoContent{}
}

/*DissociateIPFromChildNoContent handles this case with default header values.

Dedicated IP is dissociated from the child
*/
type DissociateIPFromChildNoContent struct {
}

func (o *DissociateIPFromChildNoContent) Error() string {
	return fmt.Sprintf("[POST /reseller/children/{childId}/ips/dissociate][%d] dissociateIpFromChildNoContent ", 204)
}

func (o *DissociateIPFromChildNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDissociateIPFromChildBadRequest creates a DissociateIPFromChildBadRequest with default headers values
func NewDissociateIPFromChildBadRequest() *DissociateIPFromChildBadRequest {
	return &DissociateIPFromChildBadRequest{}
}

/*DissociateIPFromChildBadRequest handles this case with default header values.

bad request
*/
type DissociateIPFromChildBadRequest struct {
	Payload *models.ErrorModel
}

func (o *DissociateIPFromChildBadRequest) Error() string {
	return fmt.Sprintf("[POST /reseller/children/{childId}/ips/dissociate][%d] dissociateIpFromChildBadRequest  %+v", 400, o.Payload)
}

func (o *DissociateIPFromChildBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDissociateIPFromChildNotFound creates a DissociateIPFromChildNotFound with default headers values
func NewDissociateIPFromChildNotFound() *DissociateIPFromChildNotFound {
	return &DissociateIPFromChildNotFound{}
}

/*DissociateIPFromChildNotFound handles this case with default header values.

Child ID not found
*/
type DissociateIPFromChildNotFound struct {
	Payload *models.ErrorModel
}

func (o *DissociateIPFromChildNotFound) Error() string {
	return fmt.Sprintf("[POST /reseller/children/{childId}/ips/dissociate][%d] dissociateIpFromChildNotFound  %+v", 404, o.Payload)
}

func (o *DissociateIPFromChildNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
