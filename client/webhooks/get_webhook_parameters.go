// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetWebhookParams creates a new GetWebhookParams object
// with the default values initialized.
func NewGetWebhookParams() *GetWebhookParams {
	var ()
	return &GetWebhookParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWebhookParamsWithTimeout creates a new GetWebhookParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWebhookParamsWithTimeout(timeout time.Duration) *GetWebhookParams {
	var ()
	return &GetWebhookParams{

		timeout: timeout,
	}
}

// NewGetWebhookParamsWithContext creates a new GetWebhookParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWebhookParamsWithContext(ctx context.Context) *GetWebhookParams {
	var ()
	return &GetWebhookParams{

		Context: ctx,
	}
}

// NewGetWebhookParamsWithHTTPClient creates a new GetWebhookParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWebhookParamsWithHTTPClient(client *http.Client) *GetWebhookParams {
	var ()
	return &GetWebhookParams{
		HTTPClient: client,
	}
}

/*GetWebhookParams contains all the parameters to send to the API endpoint
for the get webhook operation typically these are written to a http.Request
*/
type GetWebhookParams struct {

	/*WebhookID
	  Id of the webhook

	*/
	WebhookID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get webhook params
func (o *GetWebhookParams) WithTimeout(timeout time.Duration) *GetWebhookParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get webhook params
func (o *GetWebhookParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get webhook params
func (o *GetWebhookParams) WithContext(ctx context.Context) *GetWebhookParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get webhook params
func (o *GetWebhookParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get webhook params
func (o *GetWebhookParams) WithHTTPClient(client *http.Client) *GetWebhookParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get webhook params
func (o *GetWebhookParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithWebhookID adds the webhookID to the get webhook params
func (o *GetWebhookParams) WithWebhookID(webhookID int64) *GetWebhookParams {
	o.SetWebhookID(webhookID)
	return o
}

// SetWebhookID adds the webhookId to the get webhook params
func (o *GetWebhookParams) SetWebhookID(webhookID int64) {
	o.WebhookID = webhookID
}

// WriteToRequest writes these params to a swagger request
func (o *GetWebhookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param webhookId
	if err := r.SetPathParam("webhookId", swag.FormatInt64(o.WebhookID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
