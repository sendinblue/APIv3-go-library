// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// NewImportContactsParams creates a new ImportContactsParams object
// with the default values initialized.
func NewImportContactsParams() *ImportContactsParams {
	var ()
	return &ImportContactsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewImportContactsParamsWithTimeout creates a new ImportContactsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewImportContactsParamsWithTimeout(timeout time.Duration) *ImportContactsParams {
	var ()
	return &ImportContactsParams{

		timeout: timeout,
	}
}

// NewImportContactsParamsWithContext creates a new ImportContactsParams object
// with the default values initialized, and the ability to set a context for a request
func NewImportContactsParamsWithContext(ctx context.Context) *ImportContactsParams {
	var ()
	return &ImportContactsParams{

		Context: ctx,
	}
}

// NewImportContactsParamsWithHTTPClient creates a new ImportContactsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewImportContactsParamsWithHTTPClient(client *http.Client) *ImportContactsParams {
	var ()
	return &ImportContactsParams{
		HTTPClient: client,
	}
}

/*ImportContactsParams contains all the parameters to send to the API endpoint
for the import contacts operation typically these are written to a http.Request
*/
type ImportContactsParams struct {

	/*RequestContactImport
	  Values to import contacts in Sendinblue. To know more about the expected format, please have a look at ``https://help.sendinblue.com/hc/en-us/articles/209499265-Build-contacts-lists-for-your-email-marketing-campaigns``

	*/
	RequestContactImport *models.RequestContactImport

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the import contacts params
func (o *ImportContactsParams) WithTimeout(timeout time.Duration) *ImportContactsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import contacts params
func (o *ImportContactsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import contacts params
func (o *ImportContactsParams) WithContext(ctx context.Context) *ImportContactsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import contacts params
func (o *ImportContactsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import contacts params
func (o *ImportContactsParams) WithHTTPClient(client *http.Client) *ImportContactsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import contacts params
func (o *ImportContactsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequestContactImport adds the requestContactImport to the import contacts params
func (o *ImportContactsParams) WithRequestContactImport(requestContactImport *models.RequestContactImport) *ImportContactsParams {
	o.SetRequestContactImport(requestContactImport)
	return o
}

// SetRequestContactImport adds the requestContactImport to the import contacts params
func (o *ImportContactsParams) SetRequestContactImport(requestContactImport *models.RequestContactImport) {
	o.RequestContactImport = requestContactImport
}

// WriteToRequest writes these params to a swagger request
func (o *ImportContactsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RequestContactImport == nil {
		o.RequestContactImport = new(models.RequestContactImport)
	}

	if err := r.SetBodyParam(o.RequestContactImport); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
