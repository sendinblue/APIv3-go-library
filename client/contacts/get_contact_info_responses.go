// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// GetContactInfoReader is a Reader for the GetContactInfo structure.
type GetContactInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContactInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetContactInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetContactInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetContactInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetContactInfoOK creates a GetContactInfoOK with default headers values
func NewGetContactInfoOK() *GetContactInfoOK {
	return &GetContactInfoOK{}
}

/*GetContactInfoOK handles this case with default header values.

Contact informations
*/
type GetContactInfoOK struct {
	Payload *models.GetExtendedContactDetails
}

func (o *GetContactInfoOK) Error() string {
	return fmt.Sprintf("[GET /contacts/{email}][%d] getContactInfoOK  %+v", 200, o.Payload)
}

func (o *GetContactInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetExtendedContactDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactInfoBadRequest creates a GetContactInfoBadRequest with default headers values
func NewGetContactInfoBadRequest() *GetContactInfoBadRequest {
	return &GetContactInfoBadRequest{}
}

/*GetContactInfoBadRequest handles this case with default header values.

bad request
*/
type GetContactInfoBadRequest struct {
	Payload *models.ErrorModel
}

func (o *GetContactInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /contacts/{email}][%d] getContactInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetContactInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactInfoNotFound creates a GetContactInfoNotFound with default headers values
func NewGetContactInfoNotFound() *GetContactInfoNotFound {
	return &GetContactInfoNotFound{}
}

/*GetContactInfoNotFound handles this case with default header values.

Contact's email not found
*/
type GetContactInfoNotFound struct {
	Payload *models.ErrorModel
}

func (o *GetContactInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /contacts/{email}][%d] getContactInfoNotFound  %+v", 404, o.Payload)
}

func (o *GetContactInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
