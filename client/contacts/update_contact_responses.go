// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sendinblue/APIv3-go-library/models"
)

// UpdateContactReader is a Reader for the UpdateContact structure.
type UpdateContactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateContactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUpdateContactNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateContactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateContactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateContactNoContent creates a UpdateContactNoContent with default headers values
func NewUpdateContactNoContent() *UpdateContactNoContent {
	return &UpdateContactNoContent{}
}

/*UpdateContactNoContent handles this case with default header values.

Contact updated
*/
type UpdateContactNoContent struct {
}

func (o *UpdateContactNoContent) Error() string {
	return fmt.Sprintf("[PUT /contacts/{email}][%d] updateContactNoContent ", 204)
}

func (o *UpdateContactNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateContactBadRequest creates a UpdateContactBadRequest with default headers values
func NewUpdateContactBadRequest() *UpdateContactBadRequest {
	return &UpdateContactBadRequest{}
}

/*UpdateContactBadRequest handles this case with default header values.

bad request
*/
type UpdateContactBadRequest struct {
	Payload *models.ErrorModel
}

func (o *UpdateContactBadRequest) Error() string {
	return fmt.Sprintf("[PUT /contacts/{email}][%d] updateContactBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateContactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContactNotFound creates a UpdateContactNotFound with default headers values
func NewUpdateContactNotFound() *UpdateContactNotFound {
	return &UpdateContactNotFound{}
}

/*UpdateContactNotFound handles this case with default header values.

Contact's email not found
*/
type UpdateContactNotFound struct {
	Payload *models.ErrorModel
}

func (o *UpdateContactNotFound) Error() string {
	return fmt.Sprintf("[PUT /contacts/{email}][%d] updateContactNotFound  %+v", 404, o.Payload)
}

func (o *UpdateContactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
